name: 编译

on:
  push:
    branches: 
      - master
  release:
      types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 校验本地文件
        uses: actions/checkout@master
        with:
          ref: master

      - name: 更新软件列表
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get update
      - name: 安装编译环境
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get -y install wget build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
      - name: 下载SDK
        env:
          SDK_NAME: openwrt-sdk-21.02.1-bcm53xx_gcc-8.4.0_musl_eabi.Linux-x86_64
          SDK_URL: https://downloads.openwrt.org/releases/21.02.1/targets/bcm53xx/generic
        run: |
          wget -q ${SDK_URL}/${SDK_NAME}.tar.xz
          xz -d ${SDK_NAME}.tar.xz
          tar -xf ${SDK_NAME}.tar
          mv $SDK_NAME openwrt
      - name: 构建自定义文件结构
        run: |
          cd openwrt

          cp /usr/bin/upx staging_dir/host/bin

          # k3screenctrl
          svn checkout https://github.com/coolsnowwolf/lede/trunk/package/lean/k3screenctrl package/k3screenctrl

          # KMS
          svn checkout https://github.com/coolsnowwolf/lede/trunk/package/lean/vlmcsd package/vlmcsd
          svn checkout https://github.com/coolsnowwolf/lede/trunk/package/lean/luci-app-vlmcsd package/luci-app-vlmcsd

          # aliyundrive-webdav
          svn checkout https://github.com/coolsnowwolf/lede/trunk/package/lean/aliyundrive-webdav package/aliyundrive-webdav
          svn checkout https://github.com/coolsnowwolf/lede/trunk/package/lean/luci-app-aliyundrive-webdav package/luci-app-aliyundrive-webdav

          # # udp2raw-tunnel
          # git clone https://github.com/qq523407234/openwrt-udp2raw package/udp2raw-tunnel
          # git clone https://github.com/qq523407234/luci-app-udp2raw package/luci-app-udp2raw

          # # v2ray
          # git clone --branch v4.20.0-4 https://github.com/kuoruan/openwrt-v2ray package/v2ray-core
          # git clone https://github.com/kuoruan/luci-app-v2ray package/luci-app-v2ray
          # # upx压缩等级改为速度最优的 compress faster
          # sed -i 's/--ultra-brute/-1/g' package/v2ray-core/Makefile
          # # bug fix
          # sed -i 's/mv -f $(DL_DIR)\/$(GEO/#mv -f $(DL_DIR)\/$(GEO/g' package/v2ray-core/Makefile

          # # OpenAppFilter
          # git clone https://github.com/destan19/OpenAppFilter package/OpenAppFilter

          # # smartdns
          # svn checkout https://github.com/coolexa/smartdns-lite/trunk/package/openwrt package/smartdns
          # git clone https://github.com/coolexa/luci-app-smartdns package/luci-app-smartdns

          # trojan
          # git clone https://github.com/coolexa/openwrt-trojan package/openwrt-trojan
          # # luci-app-passwall
          # cat >> feeds.conf.default <<EOF
          # src-git lienol https://github.com/Lienol/openwrt-package
          # EOF

          # luci-app-passwall
          #git clone https://github.com/xiaorouji/openwrt-passwall package/passwall
          echo "src-git passwall https://github.com/xiaorouji/openwrt-passwall" >> feeds.conf.default


      - name: 构建编译扩展环境
        run: |
          cd openwrt
          ./scripts/feeds update -a >/dev/null
          # ./scripts/feeds install -a >/dev/null
          ./scripts/feeds install luci-app-passwall

      - name: 插件选择
        run: |
          cd openwrt
          make defconfig

      - name: 进行编译-1
        run: |
          cd openwrt
          make package/vlmcsd/compile -j$(nproc)
          make package/luci-app-vlmcsd/compile -j$(nproc)

      - name: 进行编译-2
        run: |
          cd openwrt
          make package/aliyundrive-webdav/compile -j$(nproc)
          make package/luci-app-aliyundrive-webdav/compile -j$(nproc)

      - name: 进行编译-3
        run: |
          cd openwrt
          make package/k3screenctrl/compile -j$(nproc)

      - name: 进行编译-4
        run: |
          cd openwrt   
          make package/luci-app-passwall/compile -j$(nproc)

      # - name: 简单清理
      #   run: |
      #     cd openwrt/bin
      #     find . -name '*firmware*' | xargs rm

      # - name : 上传
      #   uses: actions/upload-artifact@master
      #   with:
      #     name: openWrt-app
      #     path: openwrt/bin

      - name: 提取ipk
        run: |
          mkdir -p ./ipk/
          # find ./openwrt/bin/ -name "*trojan*.ipk" | xargs -i mv -f {} ./ipk/
          find ./openwrt/bin/ -name "*.ipk" | xargs -i mv -f {} ./ipk/
      - name : 上传ipk
        uses: actions/upload-artifact@master
        with:
          name: openwrt-ipk
          path: ipk
